Cоздаемо класс PlayersFactory
Создаемо метод класу create_player з аргументами
Змінній  player_name передаем аргумент name
Создаем метод класу Proc а саме lambda own block
Визиваем блок спецметодом  yield 
Визиваем own block
Виводимо результат як "I'm #{player_name}, and I play as  #{position}"

=============================================

Cоздаемо класс Playground
attr_accessor приватний метод класу який створюе сеттери и геттери для :arena_name, :players
Ініціюємо методи arena_name, players
Методу класу arena_name присвоемо змінну arena_name
Методу класу players присвоемо пустий массив
Для кожного граця задіяного в грі Заповнюємо массив players гравцями та позиціями на яких вони грають, а також передаем блок арени на якій вони грають, якщо у players є ключ ім'я і ключ позиція
Cтворюємо метод call_over з аргументом action
Для массиву players з ключем player визиваем екшин з индексом гравця
Створюемо пустий массив для action
Заповнюемо екшини блоками
В передостанній строчці створюем новий инстанс класу Playground и передаем йому аргументи
І в останньому визиваем наш метод lambda over_action і в нас виходить наче замикання,
адже кожному иншому гравцю ми передаемо новий блок.
